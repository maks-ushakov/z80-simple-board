; Simplest OS
;
; Registers
; HL - address
; C - data
; End your program with HALT.

D_ADDR_H: equ 00H 	; High byte of Address Indicator
D_ADDR_L: equ 01H		; Low byte of Address Indicator
D_DATA: 	equ 02H 	; Data byte indicator

LAST_RAM: equ 8000H ; First unavailable RAM cell
FIRST_RAM: equ 0C00H; First available RAM cell
KBD_PORT: equ 03H
;Key kodes
C_SETHB: equ 010H  ;  Hight ADDR byte
C_SETLB: equ 011H  ; Low ADDR byte
C_SETDAT: equ 012H ; DATA
C_RUN: equ 013H		 ; Run code

STARTUP_ADDR: equ 0
APP_ADDR: equ 0x0038

;org 0
;	jr start

; setup()
;org APP_ADDR
start:
	; First unavailable memory cell to set Stack Pointer
	ld sp, LAST_RAM 	; sp <- LAST_RAM 
	ld hl, FIRST_RAM	; hl <- FIRST_RAM Current Address
; loop()
display:	
										; Show Address from HL
										; Save data from memory to C
	ld c, (hl)				; c <- memory data pointed in HL
display_addr:
	ld a, h						; A <- H , Get High byte of address
	 ; Show on high byte indicator
	ld a, l						; A -< L , Get low byte of address
	out (D_ADDR_L), a	; Show on low byte addr indicator
display_data:
	ld a, c						; A <- C , Get saved data
	out (D_DATA), a		; Sow on data indicator

main:
scan_kbd:
	in A, (KBD_PORT)	; Skan KBD, result (Keycode) in A
	cp 0xff						; 
	jr z, scan_kbd		; if (A == 0xFF) skan again
	; Process key
	cp 10H						;
	jr nc, non_digit	; if A > 10H, continue on non_digit
	ld b, a						; B <- A
	ld a, c						; A <- C
	rlca							; Roll A 4 times
	rlca
	rlca
	rlca
	and 0f0h					; A = A & 0xF0
	or a, b						; A = A | B
	ld c, a						; C <- A
	jr display_data		; Display
	
non_digit:
	cp C_SETHB				; 
	jr nz, set_low_addr ; if Key != SET_HB, check SET_LB
	ld h, c						; H <- C, Load to Addr H reg
	jr display
	
set_low_addr:
	cp C_SETLB				;
	jr nz, set_instr	; if Key != SET_LB, check SET_DAT
	ld l, c						; L <- C, Load to Addr Low reg
	jr display

set_instr:
	cp C_SETDAT				;
	jr nz, run						; if Key != SET_DAT, check RUN
	; load from C to memory cell pointed from HL
	ld (hl), c				; (HL) <- C	
	inc hl						; HL++
	jr display

run:
	cp C_RUN
	jr nz, main				; if Key != RUN, check again
	jp (hl)						; Execute code
