# File fake_os.zasm
0000			org 0 
0000			 
0000			include "lcd1602h.zasm" 
0000				; LCD Commands 
0000			LCD_EMODE: 		equ 00000100b	; Entry mode set 
0000					; Function set 
0000			LCD_F_8b_1L_F8:  	equ 00110000b	; 8-bit mode, 1 display line, font 5x8 dots 
0000			LCD_F_8b_2L_F8:  	equ 00111000b	; 8-bit mode, 2 display lines, font 5x8 dots 
0000			LCD_F_8b_1L_F10:	equ 00110100b	; 8-bit mode, 1 line, font 5x10 
0000			LCD_F_8b_2L_F10:	equ 00111100b	; 8-bit mode, 2 lines, font 5x10 
0000			LCD_F_4b_1l_F8:		equ 00100000b	; 4-bit mode, 1 line, font 5x8 
0000			LCD_F_4b_2l_F8:		equ 00101000b	; 4-bit mode, 2 lines, font 5x8 
0000			LCD_F_4b_1l_F10:	equ 00100100b	; 4-bit mode, 2 lines, font 5x10 
0000			LCD_F_4b_2l_F10:	equ 00101100b	; 4-bit mode, 2 lines, font 5x10 
0000					;display on/off controld 
0000			LCD_ON_D:		equ 00001100b   ; Display -on, Cursor - off, Blink - 0ff 
0000			LCD_ON_DC:		equ 00001110b   ; Display -on, Cursor - on, Blink - off 
0000			LCD_ON_DCB:		equ 00001111b   ; Display -on, Cursor - on, Blink - on 
0000			 
0000					;Cursor movements 
0000			LCD_CLR:		equ 00000001b	; CLear display, cursor to first line pos 0, (need 1,52 ms) 
0000			LCD_HOME: 		equ 00000010B 
0000			LCD_1_LINE: 	equ 10000000b	; Move cursor to second line position 0 
0000			LCD_2_LINE:		equ 11000000b	; Move cursor to second line position 0 
0000			LCD_CSHIFT_L:	equ 00010000b	; Shift cursor left 
0000			LCD_CSHIFT_R:	equ	00010100b  	; Shift cursor right 
0000			LCD_DSHIFT_L:	equ	00011000b  	; Shift display left 
0000			LCD_DSHIFT_R:	equ	00011100b  	; Shift display right 
# End of file lcd1602h.zasm
0000			 
0000				; PORTs 
0000			LCD_CMD:	equ 0x00			; 
0000			LCD_DATA:	equ 0x01			; 
0000			DATA_PORT:	equ 0x08			; 
0000			 
0000				;Startup procedures for LCD 16x02 
0000			setup:					 
0000 21 32 00		    ld hl,LCD_STARTUP	; Load address of startup array to HL 
0003 06 04		    ld b, 4				; load nomber of command to B 
0005			setLCD: 
0005 7e			    ld a, (hl);			; Load command from address pointed by HL 
0006 d3 00		    out (LCD_CMD), a	; Load command to LCD 
0008 23			    inc hl				; HL++ 
0009 10 fa		    djnz setLCD			; while (B-- != 0) repeat 
000b			     
000b					; Print Message on first Row 
000b			firstRow: 
000b 06 07		    ld b, 7				; Number of char's (string length) 
000d 2a 36 00		    ld hl, (FIRST_ROW)	; load address of string to HL 
0010			     
0010			printFR: 
0010 7e			    ld a, (hl)			; load char from addr pointed by HL 
0011 d3 01		    out (LCD_DATA), a	; load char to LCD 
0013 23			    inc hl				; Next char addr 
0014 10 fa		    djnz printFR		; while (B-- != 0) repeat 
0016 3e c0		    ld a, LCD_2_LINE		; Move cursor to next line 
0018 d3 00		    out (LCD_CMD), a    
001a			     
001a					; Main loop 
001a			main: 
001a db 08		    in a, (DATA_PORT)	; load data from input port 
001c fe ff		    cp 0FFh				; if port is empty 
001e ca 1a 00		    jp Z, main			; whait data 
0021 fe 0a		    cp '\n'				; is there CR (\n) in data? 
0023 c2 2d 00		    jp NZ, print		; if not print character 
0026 3e 01		    ld a, LCD_CLR			; else clear display 
0028 d3 00		    out (LCD_CMD), a	; 
002a c3 0b 00		    jp firstRow			; and refill it 
002d			     
002d			print: 
002d d3 01		    out (LCD_DATA), a 
002f c3 1a 00		    jp main 
0032			 
0032			LCD_STARTUP: 
0032 04			    db LCD_EMODE  		; 
0033 38			    db LCD_F_8b_2L_F8	; 2 lines 
0034 0f			    db LCD_ON_DCB 		; Display -on, Cursor - on, Blink - on 
0035 01				db LCD_CLR			; Clear display 
0036			FIRST_ROW: 
0036 ..			    dm "Fake OS" 
# End of file fake_os.zasm
003d
