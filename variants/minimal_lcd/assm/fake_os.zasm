org 0

include "lcd1602h.zasm"

	; PORTs
LCD_CMD:	equ 0x00			;
LCD_DATA:	equ 0x01			;
DATA_PORT:	equ 0x08			;

	;Startup procedures for LCD 16x02
setup:					
    ld hl,LCD_STARTUP	; Load address of startup array to HL
    ld b, 4				; load nomber of command to B
setLCD:
    ld a, (hl);			; Load command from address pointed by HL
    out (LCD_CMD), a	; Load command to LCD
    inc hl				; HL++
    djnz setLCD			; while (B-- != 0) repeat
    
		; Print Message on first Row
firstRow:
    ld b, 7				; Number of char's (string length)
    ld hl, (FIRST_ROW)	; load address of string to HL
    
printFR:
    ld a, (hl)			; load char from addr pointed by HL
    out (LCD_DATA), a	; load char to LCD
    inc hl				; Next char addr
    djnz printFR		; while (B-- != 0) repeat
    ld a, LCD_2_LINE		; Move cursor to next line
    out (LCD_CMD), a   
    
		; Main loop
main:
    in a, (DATA_PORT)	; load data from input port
    cp 0FFh				; if port is empty
    jp Z, main			; whait data
    cp '\n'				; is there CR (\n) in data?
    jp NZ, print		; if not print character
    ld a, LCD_CLR			; else clear display
    out (LCD_CMD), a	;
    jp firstRow			; and refill it
    
print:
    out (LCD_DATA), a
    jp main

LCD_STARTUP:
    db LCD_EMODE  		;
    db LCD_F_8b_2L_F8	; 2 lines
    db LCD_ON_DCB 		; Display -on, Cursor - on, Blink - on
	db LCD_CLR			; Clear display
FIRST_ROW:
    dm "Fake OS"
